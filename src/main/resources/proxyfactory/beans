<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd">


    <bean id="target" class="com.flexible.beforeadvice.PoliteWaiter"></bean>
    <bean id="greetingAdvice" class="com.flexible.beforeadvice.GreetBeforeAdvice"></bean>

    <bean id="waiter" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="com.flexible.beforeadvice.Waiter"
          p:interceptorNames="greetingAdvice,"
          p:optimize="true"
          p:target-ref="target">
    </bean>


    <bean id="target2" class="com.flexible.afteradvice.PoliteWaiter"></bean>
    <bean id="greetingAdvice2" class="com.flexible.afteradvice.GreetBeforeAdvice"></bean>
    <bean id="greetingAfterAdvice" class="com.flexible.afteradvice.GreetAfterAdvice"></bean>

    <bean id="waiter2" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="com.flexible.afteradvice.Waiter"
          p:interceptorNames="greetingAdvice2,greetingAfterAdvice"
          p:optimize="true"
          p:target-ref="target2">
    </bean>


    <bean id="target3" class="com.flexible.aroundadvice.PoliteWaiter"></bean>
    <bean id="greetingAdvice3" class="com.flexible.aroundadvice.GreetingInterceptor"></bean>

    <bean id="waiter3" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="com.flexible.aroundadvice.Waiter"
          p:interceptorNames="greetingAdvice3"
          p:target-ref="target3">
    </bean>


    <!--异常增强-->
    <bean id="transactionManager" class="com.flexible.throwadvice.TransactionManager"></bean>
    <bean id="payTarget" class="com.flexible.throwadvice.PayService"></bean>

    <bean id="ins" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="transactionManager"
          p:target-ref="payTarget"
          p:proxyTargetClass="true">
    </bean>


    <bean id="pmonitor" class="com.flexible.introduceadvice.ControllablePerformanaceMonitor"></bean>
    <bean id="forumServiceTarget" class="com.flexible.introduceadvice.ForumService"></bean>
    <bean id="forumService" class="org.springframework.aop.framework.ProxyFactoryBean"
    p:interfaces="com.flexible.introduceadvice.Monitorable"
    p:target-ref="forumServiceTarget"
    p:interceptorNames="pmonitor"
    p:proxyTargetClass="true"></bean>

    <!--普通静态方法切面匹配-->

    <bean id="waiterTarget" class="com.flexible.advisormatch.staticmethodadvisormatch.Waiter"></bean>
    <bean id="sellerTarget" class="com.flexible.advisormatch.staticmethodadvisormatch.Seller"></bean>

    <bean id="advisormatchGreetingAdvice"
          class="com.flexible.advisormatch.staticmethodadvisormatch.GreetBeforeAdvice"></bean>

    <bean id="greetAdvisor" class="com.flexible.advisormatch.staticmethodadvisormatch.GreetingAdvisor"
          p:advice-ref="advisormatchGreetingAdvice"></bean>  <!--这里注入一个前置切面-->
    <!--通过一个父类定义一个公共的配置信息-->
    <bean id="parent" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="greetAdvisor"
          p:proxyTargetClass="true"
    ></bean>
    <bean id="advisormatchWaiter" parent="parent" p:target-ref="waiterTarget"></bean>
    <bean id="advisormatchSeller" parent="parent" p:target-ref="sellerTarget"></bean>


    <!--正则表达式匹配切面-->

    <bean id="waiterTarget2" class="com.flexible.advisormatch.regexpadvisormatch.Waiter"></bean>
    <bean id="sellerTarget2" class="com.flexible.advisormatch.regexpadvisormatch.Seller"></bean>

    <bean id="advisormatchGreetingAdvice2"
          class="com.flexible.advisormatch.regexpadvisormatch.GreetBeforeAdvice"></bean>

    <bean id="greetAdvisor2" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor"
          p:advice-ref="advisormatchGreetingAdvice2">
        <property name="patterns">
            <list>
                <value>.*greet.*</value>
            </list>
        </property>
    </bean>
    <!--通过一个父类定义一个公共的配置信息-->
    <bean id="parent2" abstract="true" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="greetAdvisor2"
          p:proxyTargetClass="true"
    ></bean>
    <bean id="advisormatchWaiter2" parent="parent2" p:target-ref="waiterTarget2"></bean>
    <bean id="advisormatchSeller2" parent="parent2" p:target-ref="sellerTarget2"></bean>


    <!--动态切面配置-->


    <bean id="waiterTarget3" class="com.flexible.advisormatch.dynamicmatch.Waiter"></bean>
    <bean id="dynamicAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="pointcut">
            <bean class="com.flexible.advisormatch.dynamicmatch.GreetingDynamicPointcut"></bean>
        </property>
        <property name="advice">
            <bean class="com.flexible.advisormatch.dynamicmatch.GreetBeforeAdvice"></bean>
        </property>
    </bean>
    <bean id="waiter4" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="dynamicAdvisor"
          p:target-ref="waiterTarget3"
          p:proxyTargetClass="true"></bean>

    <!--流程切面-->
    <bean id="controlFlowGreetingAdvice" class="com.flexible.advisormatch.controflowmatch.GreetBeforeAdvice"></bean>

    <bean id="controlFlowWaiterTarget" class="com.flexible.advisormatch.controflowmatch.Waiter"></bean>

    <bean id="controlFlowPointcut" class="org.springframework.aop.support.ControlFlowPointcut">
        <constructor-arg type="java.lang.Class"
                         value="com.flexible.advisormatch.controflowmatch.WaiterDelegate"></constructor-arg>
        <constructor-arg type="java.lang.String" value="service"></constructor-arg>
    </bean>

    <bean id="controlFlowAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
          p:pointcut-ref="controlFlowPointcut"
          p:advice-ref="controlFlowGreetingAdvice">
    </bean>

    <bean id="controlFlowWaiter1" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="controlFlowAdvisor"
          p:target-ref="controlFlowWaiterTarget"
          p:proxyTargetClass="true">
    </bean>


    <!--复合切点-->
    <bean id="composableGreetingAdvice" class="com.flexible.advisormatch.composablepointcutmatch.GreetBeforeAdvice"></bean>
    <bean id="gcp" class="com.flexible.advisormatch.composablepointcutmatch.GreetingComposablePointcut"></bean>
    <bean id="composableAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
    p:pointcut="#{gcp.intersectionPointcut}"
    p:advice-ref="composableGreetingAdvice"
    ></bean>
    <bean id="composableWaiterTarget" class="com.flexible.advisormatch.composablepointcutmatch.Waiter"></bean>
    <bean id="composableProxyWaiter" class="org.springframework.aop.framework.ProxyFactoryBean"
    p:interceptorNames="composableAdvisor"
    p:target-ref="composableWaiterTarget"
    p:proxyTargetClass="true"></bean>


</beans>
